/*
 * Курсовая работа \"Разработка базы данных для веб-системы аренды домов\"
 * Автор работы: Кищенко Кирилл Александрович Это API предназначено для управления арендой домов.  Оно предоставляет функционал для работы с категориями домов,  арендаторами, платежами и настройками системы.  Каждый дом может быть отнесен к одной из категорий, и может  иметь множество арендаторов. Платежи связаны с арендаторами,  а система настроек позволяет управлять контактной информацией. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SystemSettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-19T10:18:59.509201700+03:00[Africa/Nairobi]")
public class SystemSettings {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_CONTACT = "contact";
  @SerializedName(SERIALIZED_NAME_CONTACT)
  private String contact;

  public static final String SERIALIZED_NAME_COVER_IMG = "cover_img";
  @SerializedName(SERIALIZED_NAME_COVER_IMG)
  private String coverImg;

  public static final String SERIALIZED_NAME_ABOUT_CONTENT = "about_content";
  @SerializedName(SERIALIZED_NAME_ABOUT_CONTENT)
  private String aboutContent;


  public SystemSettings id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Идентификатор настроек системы
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Идентификатор настроек системы")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public SystemSettings name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Название системы
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Название системы")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public SystemSettings email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Контактный email
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Контактный email")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  public SystemSettings contact(String contact) {
    
    this.contact = contact;
    return this;
  }

   /**
   * Контактный телефон
   * @return contact
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Контактный телефон")

  public String getContact() {
    return contact;
  }


  public void setContact(String contact) {
    this.contact = contact;
  }


  public SystemSettings coverImg(String coverImg) {
    
    this.coverImg = coverImg;
    return this;
  }

   /**
   * Путь к изображению обложки
   * @return coverImg
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Путь к изображению обложки")

  public String getCoverImg() {
    return coverImg;
  }


  public void setCoverImg(String coverImg) {
    this.coverImg = coverImg;
  }


  public SystemSettings aboutContent(String aboutContent) {
    
    this.aboutContent = aboutContent;
    return this;
  }

   /**
   * Описание системы
   * @return aboutContent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Описание системы")

  public String getAboutContent() {
    return aboutContent;
  }


  public void setAboutContent(String aboutContent) {
    this.aboutContent = aboutContent;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SystemSettings systemSettings = (SystemSettings) o;
    return Objects.equals(this.id, systemSettings.id) &&
        Objects.equals(this.name, systemSettings.name) &&
        Objects.equals(this.email, systemSettings.email) &&
        Objects.equals(this.contact, systemSettings.contact) &&
        Objects.equals(this.coverImg, systemSettings.coverImg) &&
        Objects.equals(this.aboutContent, systemSettings.aboutContent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, email, contact, coverImg, aboutContent);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SystemSettings {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    coverImg: ").append(toIndentedString(coverImg)).append("\n");
    sb.append("    aboutContent: ").append(toIndentedString(aboutContent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

