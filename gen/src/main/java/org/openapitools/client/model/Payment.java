/*
 * Курсовая работа \"Разработка базы данных для веб-системы аренды домов\"
 * Автор работы: Кищенко Кирилл Александрович Это API предназначено для управления арендой домов.  Оно предоставляет функционал для работы с категориями домов,  арендаторами, платежами и настройками системы.  Каждый дом может быть отнесен к одной из категорий, и может  иметь множество арендаторов. Платежи связаны с арендаторами,  а система настроек позволяет управлять контактной информацией. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * Payment
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-19T10:18:59.509201700+03:00[Africa/Nairobi]")
public class Payment {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_TENANT_ID = "tenant_id";
  @SerializedName(SERIALIZED_NAME_TENANT_ID)
  private Integer tenantId;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private Float amount;

  public static final String SERIALIZED_NAME_INVOICE = "invoice";
  @SerializedName(SERIALIZED_NAME_INVOICE)
  private String invoice;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;


  public Payment id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Идентификатор платежа
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Идентификатор платежа")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public Payment tenantId(Integer tenantId) {
    
    this.tenantId = tenantId;
    return this;
  }

   /**
   * Идентификатор арендатора (ссылается на &#x60;Tenant&#x60;)
   * @return tenantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Идентификатор арендатора (ссылается на `Tenant`)")

  public Integer getTenantId() {
    return tenantId;
  }


  public void setTenantId(Integer tenantId) {
    this.tenantId = tenantId;
  }


  public Payment amount(Float amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Сумма платежа
   * @return amount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Сумма платежа")

  public Float getAmount() {
    return amount;
  }


  public void setAmount(Float amount) {
    this.amount = amount;
  }


  public Payment invoice(String invoice) {
    
    this.invoice = invoice;
    return this;
  }

   /**
   * Номер счета
   * @return invoice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Номер счета")

  public String getInvoice() {
    return invoice;
  }


  public void setInvoice(String invoice) {
    this.invoice = invoice;
  }


  public Payment dateCreated(OffsetDateTime dateCreated) {
    
    this.dateCreated = dateCreated;
    return this;
  }

   /**
   * Дата и время создания платежа
   * @return dateCreated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Дата и время создания платежа")

  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }


  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Payment payment = (Payment) o;
    return Objects.equals(this.id, payment.id) &&
        Objects.equals(this.tenantId, payment.tenantId) &&
        Objects.equals(this.amount, payment.amount) &&
        Objects.equals(this.invoice, payment.invoice) &&
        Objects.equals(this.dateCreated, payment.dateCreated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, tenantId, amount, invoice, dateCreated);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Payment {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    invoice: ").append(toIndentedString(invoice)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

